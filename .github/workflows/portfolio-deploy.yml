# name: Portfolio Deploy
# on: [push]

# jobs:
#   build-and-deploy:
#     runs-on: ubuntu-latest
#     env:
#       MYSQL_DATABASE_HOST: ${{ secrets.MYSQL_DATABASE_HOST }}
#       MYSQL_DATABASE_PORT: ${{ secrets.MYSQL_DATABASE_PORT }}
#       MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
#       MYSQL_USER: ${{ secrets.MYSQL_USER }}
#       MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
#       MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
#     steps:
#       - name: Check out code
#         uses: actions/checkout@v2

#       - name: Install Docker Compose
#         run: sudo apt-get update && sudo apt-get install -y docker-compose

#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v1

#       - name: Build Docker images
#         run: docker-compose -f docker-compose.yml build

#       - name: Deploy containers
#         run: docker-compose -f docker-compose.yml up -d

#       - name: Esperar y comprobar que el portfolio responde
#         run: |
#           echo "Esperando a que el servicio del portfolio esté disponible..."
#           for i in {1..10}; do
#             if curl --fail http://localhost:3000; then
#               echo "El portfolio está disponible."
#               exit 0
#             fi
#             echo "Intento $i: El portfolio aún no responde, esperando 5 segundos..."
#             sleep 15
#           done
#           echo "El portfolio no respondió a tiempo."
#           exit 1

name: Portfolio Deploy
on: [push]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    env:
      DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
      DOCKER_HUB_PASSWORD: ${{ secrets.DOCKER_HUB_PASSWORD }}
      RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
      SERVICE_ID: ${{ secrets.SERVICE_ID }}
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        run: echo $DOCKER_HUB_PASSWORD | docker login --username $DOCKER_HUB_USERNAME --password-stdin

      - name: Build and push Portfolio image
        run: |
          docker build -t $DOCKER_HUB_USERNAME/portfolio:latest .
          docker push $DOCKER_HUB_USERNAME/portfolio:latest
      
      - name: Desplegar en Render
        run: |
          curl -X POST "https://api.render.com/v1/services/$SERVICE_ID/deploys" \
          -H "Authorization: Bearer $RENDER_API_KEY" \
          -H "Accept: application/json" \
          -H "Content-Type: application/json" \
          -d '{}'